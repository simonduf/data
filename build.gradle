buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.layer:gradle-git-repo-plugin:2.0.2'
  }
}
plugins {
  id 'java'
  id 'eclipse'

  //Plugins for code coverage
  id "org.sonarqube" version "1.0"
  id 'jacoco'
  
  //Plugin for having multiple tests
  //https://github.com/unbroken-dome/gradle-testsets-plugin
  //id 'org.unbroken-dome.test-sets' version '1.1.0'
  
  //Plugin to get git information
  //https://github.com/ajoberstar/gradle-git/wiki/release%20plugins%201.x
  id "org.ajoberstar.release-opinion" version "1.4.0-rc.1"
  id "org.ajoberstar.grgit" version "1.4.0-rc.1"
  id "org.ajoberstar.github-pages" version "1.4.0-rc.1"
  
  
  id "com.jfrog.bintray" version "1.4"
  id "maven-publish"
  id 'maven'
}

repositories {
        mavenCentral()
        jcenter()
    }

	
	
	
	
sourceCompatibility = 1.8
targetCompatibility = 1.8
group = 'simond'

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

dependencies {
	
	//compile 'commons-lang:commons-lang:2.6'
	//compile 'net.sourceforge.jtransforms:jtransforms:2.4.0'
	
	compile 'org.slf4j:slf4j-api:1.7.2'				// Logging library.
	runtime 'ch.qos.logback:logback-classic:1.0.9'		// Logging library.
	
	
    testCompile 'junit:junit:4.7'
}

	
	
	
	
	
	
	

//Release task configuration
	// Usage of the release task : ./gradlew release -Prelease.scope=major -Prelease.stage=final
	// stage being one of : milestone rc final
	// scope : major, minor, patch
	

import org.ajoberstar.grgit.*
release {
	// need to specify the repository to interact with
	grgit = Grgit.open(project.file('.'))
}
// Add depends on other tasks in the release task
tasks.release.dependsOn 'build' //, 'publishToMyRepo'




// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = project.name
        websiteUrl = "https://github.com/simonduf/data"
        vcsUrl = "https://github.com/simonduf/data"
        licenses = ["LGPL-2.1"]
        userOrg = project.group
        publish = true
        
        version {
                name = project.version
                //desc = 'simple interface for having node with input and output'
                released  = new Date().format("EEE MMM dd HH:mm:ss zzz yyyy")
                vcsTag = "v" + project.version
                //attributes = []
        }
    }
}

//task tagRelease << {
//  repo.tag.add {
//    name = version
//    message = "Release of ${version}"
//}

